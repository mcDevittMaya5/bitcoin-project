{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iamma\\\\Desktop\\\\Bitcoin project\\\\component\\\\Prices.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass Prices extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      currency: 'EUR'\n    });\n  }\n\n  render() {\n    let list = '';\n\n    if (this.state.currency === 'USD') {\n      list = __jsx(\"li\", {\n        className: \"list-group-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 14\n        }\n      }, \"Bitcoin rate for \", this.props.bpi.USD.description, \": \", __jsx(\"span\", {\n        class: \"badge badge-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 20\n        }\n      }, this.props.bpi.USD.code), __jsx(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 19\n        }\n      }, this.props.bpi.USD.rate));\n    } else if (this.state.currency === 'GBP') {\n      list = __jsx(\"li\", {\n        className: \"list-group-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 14\n        }\n      }, \"Bitcoin rate for \", this.props.bpi.GBP.description, \": \", __jsx(\"span\", {\n        class: \"badge badge-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 20\n        }\n      }, this.props.bpi.GBP.code), __jsx(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 19\n        }\n      }, this.props.bpi.GBP.rate));\n    } else if (this.state.currency === 'EUR') {\n      list = __jsx(\"li\", {\n        className: \"list-group-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 14\n        }\n      }, \"Bitcoin rate for \", this.props.bpi.EUR.description, \": \", __jsx(\"span\", {\n        class: \"badge badge-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 20\n        }\n      }, this.props.bpi.EUR.code), __jsx(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }\n      }, this.props.bpi.EUR.rate));\n    }\n\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, __jsx(\"ul\", {\n      className: \"list-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, list), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }), __jsx(\"select\", {\n      onChange: e => this.setState({\n        currency: e.target.value\n      }),\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, __jsx(\"option\", {\n      value: \"USD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"USD\"), __jsx(\"option\", {\n      value: \"GBP\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, \"GBP\"), __jsx(\"option\", {\n      value: \"EUR\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, \"EUR\")));\n  }\n\n}\n\nexport default Prices;","map":{"version":3,"sources":["C:/Users/iamma/Desktop/Bitcoin project/component/Prices.js"],"names":["Prices","React","Component","currency","render","list","state","props","bpi","USD","description","code","rate","GBP","EUR","e","setState","target","value"],"mappings":"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","sourcesContent":["class Prices extends React.Component{\r\n    state ={\r\n        currency: 'EUR'\r\n    }\r\n    render(){\r\n    let list = '';\r\n\r\n    if (this.state.currency === 'USD'){\r\n      list = <li className = \"list-group-item\">\r\n                 Bitcoin rate for {this.props.bpi.USD.description}\r\n                 : <span class = \"badge badge-primary\">{this.props.bpi.USD.code}</span>\r\n                  <strong>\r\n                     {this.props.bpi.USD.rate}\r\n                  </strong>\r\n             </li>\r\n    }\r\n    else if (this.state.currency === 'GBP')\r\n    {\r\n      list = <li className = \"list-group-item\">\r\n                 Bitcoin rate for {this.props.bpi.GBP.description}\r\n                 : <span class = \"badge badge-primary\">{this.props.bpi.GBP.code}</span>\r\n                  <strong>\r\n                     {this.props.bpi.GBP.rate}\r\n                  </strong>\r\n             </li>\r\n    }\r\n    else if (this.state.currency === 'EUR'){\r\n      list = <li className = \"list-group-item\">\r\n                 Bitcoin rate for {this.props.bpi.EUR.description}\r\n                 : <span class = \"badge badge-primary\">{this.props.bpi.EUR.code}</span>\r\n                  <strong>\r\n                     {this.props.bpi.EUR.rate}\r\n                  </strong>\r\n             </li>\r\n    }\r\n        return (\r\n        <div>\r\n            <ul className = \"list-group\">\r\n                {list}\r\n            </ul>\r\n            <br/>\r\n            <select onChange={e => this.setState({currency: e.target.value})}\r\n            className = \"form-control\">\r\n            <option value=\"USD\">USD</option>\r\n            <option value=\"GBP\">GBP</option>\r\n            <option value=\"EUR\">EUR</option>\r\n            </select>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Prices;"]},"metadata":{},"sourceType":"module"}