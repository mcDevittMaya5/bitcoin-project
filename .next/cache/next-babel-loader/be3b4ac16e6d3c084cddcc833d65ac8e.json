{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\iamma\\\\Desktop\\\\Bitcoin project\\\\component\\\\Prices.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Prices = /*#__PURE__*/function (_React$Component) {\n  _inherits(Prices, _React$Component);\n\n  var _super = _createSuper(Prices);\n\n  function Prices() {\n    var _this;\n\n    _classCallCheck(this, Prices);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      currency: 'USD'\n    });\n\n    return _this;\n  }\n\n  _createClass(Prices, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var list = '';\n\n      if (this.state.currency === 'USD') {\n        list = __jsx(\"li\", {\n          className: \"list-group-item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9,\n            columnNumber: 14\n          }\n        }, \"Bitcoin rate for \", this.props.bpi.USD.description, \": \", __jsx(\"span\", {\n          \"class\": \"badge badge-primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 20\n          }\n        }, this.props.bpi.USD.code), __jsx(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 19\n          }\n        }, this.props.bpi.USD.rate));\n      } else if (this.state.currency === 'GBP') {\n        list = __jsx(\"li\", {\n          className: \"list-group-item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 14\n          }\n        }, \"Bitcoin rate for \", this.props.bpi.GBP.description, \": \", __jsx(\"span\", {\n          \"class\": \"badge badge-primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 20\n          }\n        }, this.props.bpi.GBP.code), __jsx(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 19\n          }\n        }, this.props.bpi.GBP.rate));\n      } else if (this.state.currency === 'EUR') {\n        list = __jsx(\"li\", {\n          className: \"list-group-item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 14\n          }\n        }, \"Bitcoin rate for \", this.props.bpi.EUR.description, \": \", __jsx(\"span\", {\n          \"class\": \"badge badge-primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 20\n          }\n        }, this.props.bpi.EUR.code), __jsx(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 19\n          }\n        }, this.props.bpi.EUR.rate));\n      }\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, __jsx(\"ul\", {\n        className: \"list-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, list), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }), __jsx(\"select\", {\n        onChange: function onChange(e) {\n          return _this2.setState({\n            currency: e.target.value\n          });\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, __jsx(\"option\", {\n        value: \"USD\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, \"USD\"), __jsx(\"option\", {\n        value: \"GBP\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, \"GBP\"), __jsx(\"option\", {\n        value: \"EUR\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, \"EUR\")));\n    }\n  }]);\n\n  return Prices;\n}(React.Component);\n\nexport default Prices;","map":{"version":3,"sources":["C:/Users/iamma/Desktop/Bitcoin project/component/Prices.js"],"names":["Prices","currency","list","state","props","bpi","USD","description","code","rate","GBP","EUR","e","setState","target","value","React","Component"],"mappings":";;;;;;;;;;;;;;;IAAMA,M;;;;;;;;;;;;;;;;4DACK;AACHC,MAAAA,QAAQ,EAAE;AADP,K;;;;;;;6BAGC;AAAA;;AACR,UAAIC,IAAI,GAAG,EAAX;;AAEA,UAAI,KAAKC,KAAL,CAAWF,QAAX,KAAwB,KAA5B,EAAkC;AAChCC,QAAAA,IAAI,GAAG;AAAI,UAAA,SAAS,EAAG,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACsB,KAAKE,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBC,WADzC,QAEM;AAAM,mBAAQ,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqC,KAAKH,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBE,IAAxD,CAFN,EAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,KAAKJ,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBG,IADvB,CAHL,CAAP;AAOD,OARD,MASK,IAAI,KAAKN,KAAL,CAAWF,QAAX,KAAwB,KAA5B,EACL;AACEC,QAAAA,IAAI,GAAG;AAAI,UAAA,SAAS,EAAG,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACsB,KAAKE,KAAL,CAAWC,GAAX,CAAeK,GAAf,CAAmBH,WADzC,QAEM;AAAM,mBAAQ,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqC,KAAKH,KAAL,CAAWC,GAAX,CAAeK,GAAf,CAAmBF,IAAxD,CAFN,EAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,KAAKJ,KAAL,CAAWC,GAAX,CAAeK,GAAf,CAAmBD,IADvB,CAHL,CAAP;AAOD,OATI,MAUA,IAAI,KAAKN,KAAL,CAAWF,QAAX,KAAwB,KAA5B,EAAkC;AACrCC,QAAAA,IAAI,GAAG;AAAI,UAAA,SAAS,EAAG,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACsB,KAAKE,KAAL,CAAWC,GAAX,CAAeM,GAAf,CAAmBJ,WADzC,QAEM;AAAM,mBAAQ,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqC,KAAKH,KAAL,CAAWC,GAAX,CAAeM,GAAf,CAAmBH,IAAxD,CAFN,EAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,KAAKJ,KAAL,CAAWC,GAAX,CAAeM,GAAf,CAAmBF,IADvB,CAHL,CAAP;AAOD;;AACG,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAG,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKP,IADL,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI;AAAQ,QAAA,QAAQ,EAAE,kBAAAU,CAAC;AAAA,iBAAI,MAAI,CAACC,QAAL,CAAc;AAACZ,YAAAA,QAAQ,EAAEW,CAAC,CAACE,MAAF,CAASC;AAApB,WAAd,CAAJ;AAAA,SAAnB;AACA,QAAA,SAAS,EAAG,cADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFA,EAGA;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHA,EAIA;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJA,CALJ,CADA;AAcH;;;;EAjDgBC,KAAK,CAACC,S;;AAoD3B,eAAejB,MAAf","sourcesContent":["class Prices extends React.Component{\r\n    state ={\r\n        currency: 'USD'\r\n    }\r\n    render(){\r\n    let list = '';\r\n\r\n    if (this.state.currency === 'USD'){\r\n      list = <li className = \"list-group-item\">\r\n                 Bitcoin rate for {this.props.bpi.USD.description}\r\n                 : <span class = \"badge badge-primary\">{this.props.bpi.USD.code}</span>\r\n                  <strong>\r\n                     {this.props.bpi.USD.rate}\r\n                  </strong>\r\n             </li>\r\n    }\r\n    else if (this.state.currency === 'GBP')\r\n    {\r\n      list = <li className = \"list-group-item\">\r\n                 Bitcoin rate for {this.props.bpi.GBP.description}\r\n                 : <span class = \"badge badge-primary\">{this.props.bpi.GBP.code}</span>\r\n                  <strong>\r\n                     {this.props.bpi.GBP.rate}\r\n                  </strong>\r\n             </li>\r\n    }\r\n    else if (this.state.currency === 'EUR'){\r\n      list = <li className = \"list-group-item\">\r\n                 Bitcoin rate for {this.props.bpi.EUR.description}\r\n                 : <span class = \"badge badge-primary\">{this.props.bpi.EUR.code}</span>\r\n                  <strong>\r\n                     {this.props.bpi.EUR.rate}\r\n                  </strong>\r\n             </li>\r\n    }\r\n        return (\r\n        <div>\r\n            <ul className = \"list-group\">\r\n                {list}\r\n            </ul>\r\n            <br/>\r\n            <select onChange={e => this.setState({currency: e.target.value})}\r\n            className = \"form-control\">\r\n            <option value=\"USD\">USD</option>\r\n            <option value=\"GBP\">GBP</option>\r\n            <option value=\"EUR\">EUR</option>\r\n            </select>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Prices;"]},"metadata":{},"sourceType":"module"}